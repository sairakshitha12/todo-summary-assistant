import 'dotenv/config';
import express from 'express';
import cors from 'cors';
import axios from 'axios';

const app = express();
app.use(cors());
app.use(express.json());

const COHERE_API_KEY = process.env.COHERE_API_KEY;
const SLACK_WEBHOOK_URL = process.env.SLACK_WEBHOOK_URL;

console.log("COHERE_API_KEY:", COHERE_API_KEY ? "Loaded ✅" : "❌ Missing");
console.log("SLACK_WEBHOOK_URL:", SLACK_WEBHOOK_URL ? "Loaded ✅" : "❌ Missing");

app.post('/send-summary', async (req, res) => {
  const { todos } = req.body;

  console.log("✅ Received from frontend:", todos);

  if (!todos || !Array.isArray(todos) || todos.length === 0) {
    return res.status(400).json({ message: 'No todo items provided.' });
  }

  try {
    const prompt = `Summarize this todo list briefly and clearly:\n${todos.map((t, i) => `${i + 1}. ${t}`).join("\n")}`;
    console.log("📝 Prompt:", prompt);

    // Call Cohere generate endpoint
    const response = await axios.post(
      'https://api.cohere.ai/generate',
      {
        model: 'command',  
        prompt: prompt,
        max_tokens: 60,
        temperature: 0.7,
        k: 0,
        p: 1,
        frequency_penalty: 0,
        presence_penalty: 0,
        stop_sequences: ["--"],
      },
      {
        headers: {
          Authorization: `Bearer ${COHERE_API_KEY}`,
          'Content-Type': 'application/json',
          'Cohere-Version': '2022-12-06', 
        },
      }
    );

    
    const gen = response.data.generations?.[0];
    if (!gen || !gen.text) {
      console.error("❌ No generation text found in Cohere response:", response.data);
      return res.status(500).json({ message: 'No summary generated by Cohere.' });
    }

    const summary = gen.text.trim();
    console.log("🧠 Summary:", summary);

    
    await axios.post(SLACK_WEBHOOK_URL, {
      text: `*Todo Summary:*\n${summary}`,
    });

    res.json({ message: 'Summary sent successfully to Slack!', summary });

  } catch (error) {
    console.error('❌ Error:', error.response?.data || error.message);
    res.status(500).json({ message: 'Failed to generate or send summary.' });
  }
});

app.listen(4000, () => {
  console.log('Server is running on port 4000');
});
